~/go/src/kube/pkg/storage_api/gorm_api git:[main]
go test -v .
=== RUN   TestClauseCheckCommonCase

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/gorm_clause_check_test.go:44
[0.604ms] [rows:1] SELECT `id`,`name`,`desc`,`code`,`price` FROM `tbl_product` WHERE (id = 1 AND name LIKE "" OR id = 1 OR id = 2 AND NOT id = 3 AND NOT id = 4 AND `tbl_product`.`tenant_id` = 114514) AND `tbl_product`.`deleted_at` IS NULL ORDER BY id desc,id asc,id DESC,id ASC LIMIT 10
    gorm_clause_check_test.go:63: [
          {
            "ID": 1,
            "CreatedAt": "0001-01-01T00:00:00Z",
            "UpdatedAt": "0001-01-01T00:00:00Z",
            "DeletedAt": null,
            "Name": "Coca-Cola",
            "Desc": "",
            "NetContent": "",
            "Code": 8,
            "Price": 299
          }
        ]
--- PASS: TestClauseCheckCommonCase (0.00s)
=== RUN   TestClauseCheckRegularCase
--- PASS: TestClauseCheckRegularCase (0.00s)
=== RUN   TestSchema

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/gorm_schema_test.go:65
[0.201ms] [rows:0] SELECT * FROM `tbl_wrap_type1` WHERE `tbl_wrap_type1`.`deleted_at` IS NULL

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/gorm_schema_test.go:66
[0.058ms] [rows:0] SELECT * FROM `tbl_wrap_type2` WHERE `tbl_wrap_type2`.`deleted_at` IS NULL

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/gorm_schema_test.go:67
[0.092ms] [rows:0] SELECT * FROM `tbl_wrap_type3` WHERE `tbl_wrap_type3`.`deleted_at` = 0
    gorm_schema_test.go:68: {
          "DBNames": [
            "id",
            "created_at",
            "updated_at",
            "deleted_at",
            "name",
            "desc",
            "wrap_string"
          ],
          "FieldsByBindName": [
            "WrapString",
            "Model.ID",
            "Model.CreatedAt",
            "Model.UpdatedAt",
            "Model.DeletedAt",
            "InnerType.Name",
            "InnerType.Desc"
          ],
          "FieldsByDBName": [
            "id",
            "created_at",
            "updated_at",
            "deleted_at",
            "name",
            "desc",
            "wrap_string"
          ],
          "FieldsByName": [
            "Desc",
            "WrapString",
            "ID",
            "CreatedAt",
            "UpdatedAt",
            "DeletedAt",
            "Name"
          ],
          "Name": "WrapType1",
          "Table": "tbl_wrap_type1"
        }
    gorm_schema_test.go:68: {
          "DBNames": [
            "deleted_at",
            "name",
            "desc",
            "wrap_string"
          ],
          "FieldsByBindName": [
            "DeletedAt",
            "InnerType.Name",
            "InnerType.Desc",
            "WrapString"
          ],
          "FieldsByDBName": [
            "name",
            "desc",
            "wrap_string",
            "deleted_at"
          ],
          "FieldsByName": [
            "DeletedAt",
            "Name",
            "Desc",
            "WrapString"
          ],
          "Name": "WrapType2",
          "Table": "tbl_wrap_type2"
        }
    gorm_schema_test.go:68: {
          "DBNames": [
            "deleted_at",
            "name",
            "desc",
            "inner_string"
          ],
          "FieldsByBindName": [
            "InnerType2.InnerString",
            "DeletedAt",
            "InnerType2.InnerType.Name",
            "InnerType2.InnerType.Desc"
          ],
          "FieldsByDBName": [
            "name",
            "desc",
            "inner_string",
            "deleted_at"
          ],
          "FieldsByName": [
            "DeletedAt",
            "Name",
            "Desc",
            "InnerString"
          ],
          "Name": "WrapType3",
          "Table": "tbl_wrap_type3"
        }
--- PASS: TestSchema (0.00s)
=== RUN   TestTenantsCreateOne

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/multi_tenants/tenant_field_dup.go:226
[0.219ms] [rows:1] SELECT count(*) FROM `tbl_product` WHERE ((1!=1 OR ((1=1 AND `name` = "Coca-Cola") AND `desc` = "Most Popular Drink in the World")) OR (1=1 AND `code` = 8)) AND `tbl_product`.`tenant_id` = 114514 AND `tbl_product`.`deleted_at` IS NULL
    gorm_test.go:52: field dup error, table:[tbl_product] column:[name desc code], in tenant:([tenant_id]:[114514])
--- PASS: TestTenantsCreateOne (0.00s)
=== RUN   TestTenantsCreateList

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/tenants_create_test.go:20
[0.846ms] [rows:5] INSERT INTO `tbl_product` (`created_at`,`updated_at`,`deleted_at`,`name`,`desc`,`net_content`,`code`,`price`,`tenant_id`) VALUES ("2025-01-17 15:39:17.941","2025-01-17 15:39:17.941",NULL,"Milk","Fresh milk","1L",100001,800,114514),("2025-01-17 15:39:17.941","2025-01-17 15:39:17.941",NULL,"Bread","Whole wheat bread","500g",100002,1200,114514),("2025-01-17 15:39:17.941","2025-01-17 15:39:17.941",NULL,"Rice","Long grain rice","5kg",100003,4500,114514),("2025-01-17 15:39:17.941","2025-01-17 15:39:17.941",NULL,"Eggs","Free-range eggs","12 pcs",100004,1500,114514),("2025-01-17 15:39:17.941","2025-01-17 15:39:17.941",NULL,"Chicken","Fresh chicken breast","1kg",100006,3500,114514) RETURNING `id`
--- PASS: TestTenantsCreateList (0.00s)
=== RUN   TestTenantsCreateMap

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/multi_tenants/tenant_field_dup.go:226
[0.058ms] [rows:1] SELECT count(*) FROM `tbl_product` WHERE ((1!=1 OR ((1=1 AND `name` = "Apple") AND `desc` = "Fresh red apples")) OR (1=1 AND `code` = 100005)) AND `tbl_product`.`tenant_id` = 114514 AND `tbl_product`.`deleted_at` IS NULL
    gorm_test.go:52: field dup error, table:[tbl_product] column:[name desc code], in tenant:([tenant_id]:[114514])
--- PASS: TestTenantsCreateMap (0.00s)
=== RUN   TestTenantsCreateMapList

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/tenants_create_test.go:42
[0.425ms] [rows:4] INSERT INTO `tbl_product` (`code`,`desc`,`name`,`net_content`,`price`,`tenant_id`) VALUES (100007,"Local lager beer","Beer","500ml",500,114514),(100008,"Instant noodles","Noodles","5 packs",1000,114514),(100009,"Herbal shampoo","Shampoo","400ml",2500,114514),(100010,"Mint toothpaste","Toothpaste","120g",800,114514) RETURNING `id`
--- PASS: TestTenantsCreateMapList (0.00s)
=== RUN   TestCreate

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/multi_tenants/tenant_field_dup.go:226
[0.044ms] [rows:1] SELECT count(*) FROM `tbl_product` WHERE ((1!=1 OR ((1=1 AND `name` = "Beef1Ton") AND `desc` = "one ton of beef")) OR (1=1 AND `code` = 114514)) AND `tbl_product`.`tenant_id` = 114514 AND `tbl_product`.`deleted_at` IS NULL
    gorm_test.go:52: field dup error, table:[tbl_product] column:[desc code name], in tenant:([tenant_id]:[114514])
--- PASS: TestCreate (0.00s)
=== RUN   TestCreate2

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/multi_tenants/tenant_field_dup.go:226
[0.035ms] [rows:1] SELECT count(*) FROM `tbl_product` WHERE (1!=1 OR (1=1 AND `code` = 114514)) AND `tbl_product`.`tenant_id` = 114514 AND `tbl_product`.`deleted_at` IS NULL
    gorm_test.go:52: field dup error, table:[tbl_product] column:[name desc code], in tenant:([tenant_id]:[114514])
--- PASS: TestCreate2 (0.00s)
=== RUN   TestCreate3

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/tenants_create_test.go:81
[0.455ms] [rows:1] INSERT INTO `tbl_product` (`created_at`,`updated_at`,`deleted_at`,`name`,`desc`,`net_content`,`code`,`price`,`tenant_id`) VALUES ("2025-01-17 15:39:17.943","2025-01-17 15:39:17.943",NULL,"Beef2Ton","","2000kg",0,177013,114514) RETURNING `id`
--- PASS: TestCreate3 (0.00s)
=== RUN   TestTenantsDeleteOne

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/tenants_delete_test.go:8
[0.062ms] [rows:0] UPDATE `tbl_product` SET `deleted_at`="2025-01-17 15:39:17.943" WHERE `tbl_product`.`id` = 1 AND `tbl_product`.`tenant_id` = 114514 AND `tbl_product`.`deleted_at` IS NULL
--- PASS: TestTenantsDeleteOne (0.00s)
=== RUN   TestTenantsDeleteList
    gorm_test.go:52: delete tenant all rows or global update is not allowed
--- PASS: TestTenantsDeleteList (0.00s)
=== RUN   TestTenantsQueryOne

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/tenants_query_test.go:10 record not found
[0.030ms] [rows:0] SELECT * FROM `tbl_product` WHERE `tbl_product`.`id` = 1 AND `tbl_product`.`tenant_id` = 114514 AND `tbl_product`.`deleted_at` IS NULL ORDER BY `tbl_product`.`id` LIMIT 1
    gorm_test.go:52: record not found
    tenants_query_test.go:11: {
          "ID": 0,
          "CreatedAt": "0001-01-01T00:00:00Z",
          "UpdatedAt": "0001-01-01T00:00:00Z",
          "DeletedAt": null,
          "Name": "",
          "Desc": "",
          "NetContent": "",
          "Code": 0,
          "Price": 0
        }
--- PASS: TestTenantsQueryOne (0.00s)
=== RUN   TestTenantsQueryList

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/tenants_query_test.go:16
[0.209ms] [rows:33] SELECT * FROM `tbl_product` WHERE `tbl_product`.`tenant_id` = 114514 AND `tbl_product`.`deleted_at` IS NULL
    tenants_query_test.go:17: [
          {
            "ID": 15,
            "CreatedAt": "2025-01-17T15:38:01.412863+08:00",
            "UpdatedAt": "2025-01-17T15:38:01.412863+08:00",
            "DeletedAt": null,
            "Name": "Coca-Cola",
            "Desc": "Most Popular Drink in the World",
            "NetContent": "500ml",
            "Code": 8,
            "Price": 299
          },
          {
            "ID": 16,
            "CreatedAt": "2025-01-17T15:38:01.413613+08:00",
            "UpdatedAt": "2025-01-17T15:38:01.413613+08:00",
            "DeletedAt": null,
            "Name": "Milk",
            "Desc": "Fresh milk",
            "NetContent": "1L",
            "Code": 100001,
            "Price": 800
          },
          {
            "ID": 17,
            "CreatedAt": "2025-01-17T15:38:01.413613+08:00",
            "UpdatedAt": "2025-01-17T15:38:01.413613+08:00",
            "DeletedAt": null,
            "Name": "Bread",
            "Desc": "Whole wheat bread",
            "NetContent": "500g",
            "Code": 100002,
            "Price": 1200
          },
          {
            "ID": 18,
            "CreatedAt": "2025-01-17T15:38:01.413613+08:00",
            "UpdatedAt": "2025-01-17T15:38:01.413613+08:00",
            "DeletedAt": null,
            "Name": "Rice",
            "Desc": "Long grain rice",
            "NetContent": "5kg",
            "Code": 100003,
            "Price": 4500
          },
          {
            "ID": 19,
            "CreatedAt": "2025-01-17T15:38:01.413613+08:00",
            "UpdatedAt": "2025-01-17T15:38:01.413613+08:00",
            "DeletedAt": null,
            "Name": "Eggs",
            "Desc": "Free-range eggs",
            "NetContent": "12 pcs",
            "Code": 100004,
            "Price": 1500
          },
          {
            "ID": 20,
            "CreatedAt": "2025-01-17T15:38:01.413613+08:00",
            "UpdatedAt": "2025-01-17T15:38:01.413613+08:00",
            "DeletedAt": null,
            "Name": "Chicken",
            "Desc": "Fresh chicken breast",
            "NetContent": "1kg",
            "Code": 100006,
            "Price": 3500
          },
          {
            "ID": 21,
            "CreatedAt": "0001-01-01T00:00:00Z",
            "UpdatedAt": "0001-01-01T00:00:00Z",
            "DeletedAt": null,
            "Name": "Apple",
            "Desc": "Fresh red apples",
            "NetContent": "1kg",
            "Code": 100005,
            "Price": 1000
          },
          {
            "ID": 22,
            "CreatedAt": "0001-01-01T00:00:00Z",
            "UpdatedAt": "0001-01-01T00:00:00Z",
            "DeletedAt": null,
            "Name": "Beer",
            "Desc": "Local lager beer",
            "NetContent": "500ml",
            "Code": 100007,
            "Price": 500
          },
          {
            "ID": 23,
            "CreatedAt": "0001-01-01T00:00:00Z",
            "UpdatedAt": "0001-01-01T00:00:00Z",
            "DeletedAt": null,
            "Name": "Noodles",
            "Desc": "Instant noodles",
            "NetContent": "5 packs",
            "Code": 100008,
            "Price": 1000
          },
          {
            "ID": 24,
            "CreatedAt": "0001-01-01T00:00:00Z",
            "UpdatedAt": "0001-01-01T00:00:00Z",
            "DeletedAt": null,
            "Name": "Shampoo",
            "Desc": "Herbal shampoo",
            "NetContent": "400ml",
            "Code": 100009,
            "Price": 2500
          },
          {
            "ID": 25,
            "CreatedAt": "0001-01-01T00:00:00Z",
            "UpdatedAt": "0001-01-01T00:00:00Z",
            "DeletedAt": null,
            "Name": "Toothpaste",
            "Desc": "Mint toothpaste",
            "NetContent": "120g",
            "Code": 100010,
            "Price": 800
          },
          {
            "ID": 26,
            "CreatedAt": "2025-01-17T15:38:01.415162+08:00",
            "UpdatedAt": "2025-01-17T15:38:01.415162+08:00",
            "DeletedAt": null,
            "Name": "Beef1Ton",
            "Desc": "one ton of beef",
            "NetContent": "",
            "Code": 114514,
            "Price": 177013
          },
          {
            "ID": 27,
            "CreatedAt": "2025-01-17T15:38:01.415699+08:00",
            "UpdatedAt": "2025-01-17T15:38:01.415699+08:00",
            "DeletedAt": null,
            "Name": "Beef2Ton",
            "Desc": "",
            "NetContent": "2000kg",
            "Code": 0,
            "Price": 177013
          },
          {
            "ID": 28,
            "CreatedAt": "2025-01-17T15:38:54.191305+08:00",
            "UpdatedAt": "2025-01-17T15:38:54.191305+08:00",
            "DeletedAt": null,
            "Name": "Milk",
            "Desc": "Fresh milk",
            "NetContent": "1L",
            "Code": 100001,
            "Price": 800
          },
          {
            "ID": 29,
            "CreatedAt": "2025-01-17T15:38:54.191305+08:00",
            "UpdatedAt": "2025-01-17T15:38:54.191305+08:00",
            "DeletedAt": null,
            "Name": "Bread",
            "Desc": "Whole wheat bread",
            "NetContent": "500g",
            "Code": 100002,
            "Price": 1200
          },
          {
            "ID": 30,
            "CreatedAt": "2025-01-17T15:38:54.191305+08:00",
            "UpdatedAt": "2025-01-17T15:38:54.191305+08:00",
            "DeletedAt": null,
            "Name": "Rice",
            "Desc": "Long grain rice",
            "NetContent": "5kg",
            "Code": 100003,
            "Price": 4500
          },
          {
            "ID": 31,
            "CreatedAt": "2025-01-17T15:38:54.191305+08:00",
            "UpdatedAt": "2025-01-17T15:38:54.191305+08:00",
            "DeletedAt": null,
            "Name": "Eggs",
            "Desc": "Free-range eggs",
            "NetContent": "12 pcs",
            "Code": 100004,
            "Price": 1500
          },
          {
            "ID": 32,
            "CreatedAt": "2025-01-17T15:38:54.191305+08:00",
            "UpdatedAt": "2025-01-17T15:38:54.191305+08:00",
            "DeletedAt": null,
            "Name": "Chicken",
            "Desc": "Fresh chicken breast",
            "NetContent": "1kg",
            "Code": 100006,
            "Price": 3500
          },
          {
            "ID": 33,
            "CreatedAt": "0001-01-01T00:00:00Z",
            "UpdatedAt": "0001-01-01T00:00:00Z",
            "DeletedAt": null,
            "Name": "Beer",
            "Desc": "Local lager beer",
            "NetContent": "500ml",
            "Code": 100007,
            "Price": 500
          },
          {
            "ID": 34,
            "CreatedAt": "0001-01-01T00:00:00Z",
            "UpdatedAt": "0001-01-01T00:00:00Z",
            "DeletedAt": null,
            "Name": "Noodles",
            "Desc": "Instant noodles",
            "NetContent": "5 packs",
            "Code": 100008,
            "Price": 1000
          },
          {
            "ID": 35,
            "CreatedAt": "0001-01-01T00:00:00Z",
            "UpdatedAt": "0001-01-01T00:00:00Z",
            "DeletedAt": null,
            "Name": "Shampoo",
            "Desc": "Herbal shampoo",
            "NetContent": "400ml",
            "Code": 100009,
            "Price": 2500
          },
          {
            "ID": 36,
            "CreatedAt": "0001-01-01T00:00:00Z",
            "UpdatedAt": "0001-01-01T00:00:00Z",
            "DeletedAt": null,
            "Name": "Toothpaste",
            "Desc": "Mint toothpaste",
            "NetContent": "120g",
            "Code": 100010,
            "Price": 800
          },
          {
            "ID": 37,
            "CreatedAt": "2025-01-17T15:38:54.192866+08:00",
            "UpdatedAt": "2025-01-17T15:38:54.192866+08:00",
            "DeletedAt": null,
            "Name": "Beef2Ton",
            "Desc": "",
            "NetContent": "2000kg",
            "Code": 0,
            "Price": 177013
          },
          {
            "ID": 38,
            "CreatedAt": "2025-01-17T15:39:17.94167+08:00",
            "UpdatedAt": "2025-01-17T15:39:17.94167+08:00",
            "DeletedAt": null,
            "Name": "Milk",
            "Desc": "Fresh milk",
            "NetContent": "1L",
            "Code": 100001,
            "Price": 800
          },
          {
            "ID": 39,
            "CreatedAt": "2025-01-17T15:39:17.94167+08:00",
            "UpdatedAt": "2025-01-17T15:39:17.94167+08:00",
            "DeletedAt": null,
            "Name": "Bread",
            "Desc": "Whole wheat bread",
            "NetContent": "500g",
            "Code": 100002,
            "Price": 1200
          },
          {
            "ID": 40,
            "CreatedAt": "2025-01-17T15:39:17.94167+08:00",
            "UpdatedAt": "2025-01-17T15:39:17.94167+08:00",
            "DeletedAt": null,
            "Name": "Rice",
            "Desc": "Long grain rice",
            "NetContent": "5kg",
            "Code": 100003,
            "Price": 4500
          },
          {
            "ID": 41,
            "CreatedAt": "2025-01-17T15:39:17.94167+08:00",
            "UpdatedAt": "2025-01-17T15:39:17.94167+08:00",
            "DeletedAt": null,
            "Name": "Eggs",
            "Desc": "Free-range eggs",
            "NetContent": "12 pcs",
            "Code": 100004,
            "Price": 1500
          },
          {
            "ID": 42,
            "CreatedAt": "2025-01-17T15:39:17.94167+08:00",
            "UpdatedAt": "2025-01-17T15:39:17.94167+08:00",
            "DeletedAt": null,
            "Name": "Chicken",
            "Desc": "Fresh chicken breast",
            "NetContent": "1kg",
            "Code": 100006,
            "Price": 3500
          },
          {
            "ID": 43,
            "CreatedAt": "0001-01-01T00:00:00Z",
            "UpdatedAt": "0001-01-01T00:00:00Z",
            "DeletedAt": null,
            "Name": "Beer",
            "Desc": "Local lager beer",
            "NetContent": "500ml",
            "Code": 100007,
            "Price": 500
          },
          {
            "ID": 44,
            "CreatedAt": "0001-01-01T00:00:00Z",
            "UpdatedAt": "0001-01-01T00:00:00Z",
            "DeletedAt": null,
            "Name": "Noodles",
            "Desc": "Instant noodles",
            "NetContent": "5 packs",
            "Code": 100008,
            "Price": 1000
          },
          {
            "ID": 45,
            "CreatedAt": "0001-01-01T00:00:00Z",
            "UpdatedAt": "0001-01-01T00:00:00Z",
            "DeletedAt": null,
            "Name": "Shampoo",
            "Desc": "Herbal shampoo",
            "NetContent": "400ml",
            "Code": 100009,
            "Price": 2500
          },
          {
            "ID": 46,
            "CreatedAt": "0001-01-01T00:00:00Z",
            "UpdatedAt": "0001-01-01T00:00:00Z",
            "DeletedAt": null,
            "Name": "Toothpaste",
            "Desc": "Mint toothpaste",
            "NetContent": "120g",
            "Code": 100010,
            "Price": 800
          },
          {
            "ID": 47,
            "CreatedAt": "2025-01-17T15:39:17.943337+08:00",
            "UpdatedAt": "2025-01-17T15:39:17.943337+08:00",
            "DeletedAt": null,
            "Name": "Beef2Ton",
            "Desc": "",
            "NetContent": "2000kg",
            "Code": 0,
            "Price": 177013
          }
        ]
--- PASS: TestTenantsQueryList (0.00s)
=== RUN   TestTenantsQueryCount

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/tenants_query_test.go:22
[0.027ms] [rows:1] SELECT count(*) FROM `tbl_product` WHERE `tbl_product`.`tenant_id` = 114514 AND `tbl_product`.`deleted_at` IS NULL
    tenants_query_test.go:23: 33
--- PASS: TestTenantsQueryCount (0.00s)
=== RUN   TestQuery

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/tenants_query_test.go:28
[0.035ms] [rows:1] SELECT * FROM `tbl_product` WHERE `tbl_product`.`tenant_id` = 114514 AND `tbl_product`.`deleted_at` IS NULL ORDER BY `tbl_product`.`id` LIMIT 1
    tenants_query_test.go:29: {
          "ID": 15,
          "CreatedAt": "2025-01-17T15:38:01.412863+08:00",
          "UpdatedAt": "2025-01-17T15:38:01.412863+08:00",
          "DeletedAt": null,
          "Name": "Coca-Cola",
          "Desc": "Most Popular Drink in the World",
          "NetContent": "500ml",
          "Code": 8,
          "Price": 299
        }
--- PASS: TestQuery (0.00s)
=== RUN   TestTenantsUpdateOne

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/tenants_update_test.go:16
[0.050ms] [rows:0] UPDATE `tbl_product` SET `code`="114514",`updated_at`="2025-01-17 15:39:17.944" WHERE `id` = 2 AND `tbl_product`.`tenant_id` = 114514 AND `tbl_product`.`deleted_at` IS NULL
--- PASS: TestTenantsUpdateOne (0.00s)
=== RUN   TestTenantsUpdateList
    gorm_test.go:52: update tenant all rows or global update is not allowed
--- PASS: TestTenantsUpdateList (0.00s)
=== RUN   TestUpdate

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/tenants_update_test.go:27
[0.041ms] [rows:0] UPDATE `tbl_product` SET `code`=114514,`updated_at`="2025-01-17 15:39:17.944" WHERE `id` = 1 AND `tbl_product`.`tenant_id` = 114514 AND `tbl_product`.`deleted_at` IS NULL
--- PASS: TestUpdate (0.00s)
=== RUN   TestOneFieldOverlapInGe2Groups

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/multi_tenants/tenant_field_dup.go:226
[0.043ms] [rows:1] SELECT count(*) FROM `tbl_unique_test1` WHERE ((1!=1 OR ((1=1 AND `name` = "Galaxy") AND `number_id` = "0019527")) OR ((1=1 AND `number_id` = "0019527") AND `birth` = 1919730)) AND `tbl_unique_test1`.`deleted_at` IS NULL
    gorm_test.go:52: field dup error, table:[tbl_unique_test1] column:[birth name number_id]
--- PASS: TestOneFieldOverlapInGe2Groups (0.00s)
=== RUN   TestGe2FieldOverlapInGe2Groups

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/multi_tenants/tenant_field_dup.go:226
[0.041ms] [rows:1] SELECT count(*) FROM `tbl_unique_test2` WHERE (((((1!=1 OR ((1=1 AND `region_code` = 666) AND `ip_addr` = "10.101.22.10")) OR ((1=1 AND `region_code` = 666) AND `hostname` = "BJ01-HPC-0008")) OR ((1=1 AND `region_code` = 666) AND `node_id` = "pja-0x8090621")) OR ((1=1 AND `hostname` = "BJ01-HPC-0008") AND `node_id` = "pja-0x8090621")) OR (1=1 AND `mac_addr` = "02:1A:2B:3C:4D:5E")) AND `tbl_unique_test2`.`deleted_at` IS NULL
    gorm_test.go:52: field dup error, table:[tbl_unique_test2] column:[ip_addr hostname mac_addr node_id region_code]
--- PASS: TestGe2FieldOverlapInGe2Groups (0.00s)
=== RUN   TestOneFieldInOneGroup

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/multi_tenants/tenant_field_dup.go:226
[0.030ms] [rows:1] SELECT count(*) FROM `tbl_unique_test3` WHERE (1!=1 OR (1=1 AND `name` = "RR")) AND `tbl_unique_test3`.`deleted_at` IS NULL
    gorm_test.go:52: field dup error, table:[tbl_unique_test3] column:[name]
--- PASS: TestOneFieldInOneGroup (0.00s)
=== RUN   TestEachOneFieldInEachOneGroup

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/multi_tenants/tenant_field_dup.go:226
[0.030ms] [rows:1] SELECT count(*) FROM `tbl_unique_test4` WHERE ((1!=1 OR (1=1 AND `name` = "RR")) OR (1=1 AND `r_id` = 666)) AND `tbl_unique_test4`.`deleted_at` IS NULL
    gorm_test.go:52: field dup error, table:[tbl_unique_test4] column:[name r_id]
--- PASS: TestEachOneFieldInEachOneGroup (0.00s)
=== RUN   TestGe2FieldsInOneGroup

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/multi_tenants/tenant_field_dup.go:226
[0.030ms] [rows:1] SELECT count(*) FROM `tbl_unique_test5` WHERE (1!=1 OR (((1=1 AND `name` = "RR") AND `desc` = "ff-60") AND `perm` = "06-21")) AND `tbl_unique_test5`.`deleted_at` IS NULL
    gorm_test.go:52: field dup error, table:[tbl_unique_test5] column:[name desc perm]
--- PASS: TestGe2FieldsInOneGroup (0.00s)
=== RUN   TestGe2FieldsInGe2GroupNoOverlap

2025/01/17 15:39:17 /Users/chisato/go/src/kube/pkg/storage_api/gorm_api/multi_tenants/tenant_field_dup.go:226
[0.032ms] [rows:1] SELECT count(*) FROM `tbl_unique_test6` WHERE (((1!=1 OR ((1=1 AND `height` = 183) AND `weight` = 73)) OR (((1=1 AND `char1` = 5) AND `char2` = 2) AND `char3` = 1)) OR ((1=1 AND `name` = "RR") AND `desc` = "ff-06")) AND `tbl_unique_test6`.`deleted_at` IS NULL
    gorm_test.go:52: field dup error, table:[tbl_unique_test6] column:[weight char1 char2 char3 name desc height]
--- PASS: TestGe2FieldsInGe2GroupNoOverlap (0.00s)
PASS
ok      github.com/Juminiy/kube/pkg/storage_api/gorm_api        0.340s