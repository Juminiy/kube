// Package harbor_inst/client.go was generated by codegen, please fix its package dependency, but do not modify its functionality
package harbor_inst

import (
	"context"
	"github.com/Juminiy/kube/pkg/image_api/harbor_api"
	"github.com/Juminiy/kube/pkg/util"
	"github.com/goharbor/go-client/pkg/sdk/v2.0/client/artifact"
	"github.com/goharbor/go-client/pkg/sdk/v2.0/client/project"
	"github.com/goharbor/go-client/pkg/sdk/v2.0/client/repository"
	"github.com/goharbor/go-client/pkg/sdk/v2.0/client/user"
	"github.com/goharbor/go-client/pkg/sdk/v2.0/models"
	"net/http"
	"time"
)

func AdminCreateUser(userCreationReq *models.UserCreationReq) (*user.CreateUserCreated, error) {
	return harbor_api.UnwrapErr(_harborClient.AdminCreateUser(userCreationReq))
}

func AdminDeleteUser(_int64 int64) (*user.DeleteUserOK, error) {
	return harbor_api.UnwrapErr(_harborClient.AdminDeleteUser(_int64))
}

func CopyArtifact(artifactURI harbor_api.ArtifactURI, artifactURI2 harbor_api.ArtifactURI) (*artifact.CopyArtifactCreated, error) {
	return harbor_api.UnwrapErr(_harborClient.CopyArtifact(artifactURI, artifactURI2))
}

func CreateAdmin(userCreationReq *models.UserCreationReq) (*user.CreateUserCreated, error) {
	return harbor_api.UnwrapErr(_harborClient.CreateAdmin(userCreationReq))
}

func CreateArtifactTag(artifactURI harbor_api.ArtifactURI, artifactURI2 harbor_api.ArtifactURI) (*artifact.CreateTagCreated, error) {
	return harbor_api.UnwrapErr(_harborClient.CreateArtifactTag(artifactURI, artifactURI2))
}

func CreateProject(projectReqConfig harbor_api.ProjectReqConfig) (*project.CreateProjectCreated, error) {
	return harbor_api.UnwrapErr(_harborClient.CreateProject(projectReqConfig))
}

func DeleteAdmin(_int64 int64) (*user.DeleteUserOK, error) {
	return harbor_api.UnwrapErr(_harborClient.DeleteAdmin(_int64))
}

func DeleteArtifact(artifactURI harbor_api.ArtifactURI) (*artifact.DeleteArtifactOK, error) {
	return harbor_api.UnwrapErr(_harborClient.DeleteArtifact(artifactURI))
}

func DeleteArtifactTag(artifactURI harbor_api.ArtifactURI) (*artifact.DeleteTagOK, error) {
	return harbor_api.UnwrapErr(_harborClient.DeleteArtifactTag(artifactURI))
}

func DeleteProject(_string string) (*project.DeleteProjectOK, error) {
	return harbor_api.UnwrapErr(_harborClient.DeleteProject(_string))
}

func DeleteRepository(_string string, _string2 string) (*repository.DeleteRepositoryOK, error) {
	return harbor_api.UnwrapErr(_harborClient.DeleteRepository(_string, _string2))
}

func ErrorDetail(_error error) string {
	return _harborClient.ErrorDetail(_error)
}

func ExportArtifact() (string, error) {
	return harbor_api.UnwrapErr(_harborClient.ExportArtifact())
}

func GC(varLenfunc ...util.Func) {
	_harborClient.GC(varLenfunc...)
}

func GenerateArtifact() error {
	return _harborClient.GenerateArtifact()
}

func GetArtifact(artifactURI harbor_api.ArtifactURI) (*artifact.GetArtifactOK, error) {
	return harbor_api.UnwrapErr(_harborClient.GetArtifact(artifactURI))
}

func GetAuth() (string, error) {
	return harbor_api.UnwrapErr(_harborClient.GetAuth())
}

func GetProject(_string string) (*project.GetProjectOK, error) {
	return harbor_api.UnwrapErr(_harborClient.GetProject(_string))
}

func GetRepository(_string string, _string2 string) (*repository.GetRepositoryOK, error) {
	return harbor_api.UnwrapErr(_harborClient.GetRepository(_string, _string2))
}

func ImportOfflineArtifact() error {
	return _harborClient.ImportOfflineArtifact()
}

func ListArtifactTags(artifactURI harbor_api.ArtifactURI, _string string) (*artifact.ListTagsOK, error) {
	return harbor_api.UnwrapErr(_harborClient.ListArtifactTags(artifactURI, _string))
}

func ListArtifacts(artifactURI harbor_api.ArtifactURI) (*artifact.ListArtifactsOK, error) {
	return harbor_api.UnwrapErr(_harborClient.ListArtifacts(artifactURI))
}

func ListProjects(_bool bool) (*project.ListProjectsOK, error) {
	return harbor_api.UnwrapErr(_harborClient.ListProjects(_bool))
}

func ListRepositories(_string string) (*repository.ListRepositoriesOK, error) {
	return harbor_api.UnwrapErr(_harborClient.ListRepositories(_string))
}

func UpdateProjectStorageLimit(projectReqConfig *harbor_api.ProjectReqConfig) (*project.UpdateProjectOK, error) {
	return harbor_api.UnwrapErr(_harborClient.UpdateProjectStorageLimit(projectReqConfig))
}

func WithCallBack(callBack *harbor_api.CallBack) *harbor_api.Client {
	return _harborClient.WithCallBack(callBack)
}

func WithContext(context context.Context) *harbor_api.Client {
	return _harborClient.WithContext(context)
}

func WithHttpClient(client *http.Client) *harbor_api.Client {
	return _harborClient.WithHttpClient(client)
}

func WithPageConfig(page *util.Page) *harbor_api.Client {
	return _harborClient.WithPageConfig(page)
}

func WithTimeout(duration time.Duration) *harbor_api.Client {
	return _harborClient.WithTimeout(duration)
}
