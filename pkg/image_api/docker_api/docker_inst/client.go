// Package docker_inst/client.go was generated by codegen, please fix its package dependency, but do not modify its functionality
package docker_inst

import (
	"context"
	"github.com/Juminiy/kube/pkg/image_api/docker_api"
	"github.com/Juminiy/kube/pkg/image_api/docker_api/api_provider"
	"github.com/Juminiy/kube/pkg/image_api/docker_api/docker_client"
	"github.com/Juminiy/kube/pkg/util"
	"github.com/docker/docker/api/types"
	"github.com/docker/docker/api/types/events"
	"github.com/docker/docker/api/types/image"
	"github.com/docker/docker/api/types/registry"
	"github.com/docker/docker/api/types/system"
	"github.com/docker/docker/client"
	"io"
)

func BuildImage(reader io.Reader, _string string) (docker_api.BuildImageRespV1, error) {
	return _dockerClient.BuildImage(reader, _string)
}

func BuildImageFavOption(_string string) types.ImageBuildOptions {
	return _dockerClient.BuildImageFavOption(_string)
}

func BuildImageV2(reader io.Reader, _string string) (docker_api.BuildImageRespV1, error) {
	return _dockerClient.BuildImageV2(reader, _string)
}

func BuildImageV3(context context.Context, reader io.Reader, imageBuildOptions types.ImageBuildOptions) (docker_api.BuildImageRespV2, error) {
	return _dockerClient.BuildImageV3(context, reader, imageBuildOptions)
}

func BuildImageV4(context context.Context, reader io.Reader, imageBuildOptions types.ImageBuildOptions) (docker_api.BuildImageRespV1, error) {
	return _dockerClient.BuildImageV4(context, reader, imageBuildOptions)
}

func BuildImageWithCancel(context context.Context, reader io.Reader, _string string) (docker_api.BuildImageRespV1, *context.CancelFunc, error) {
	return _dockerClient.BuildImageWithCancel(context, reader, _string)
}

func CreateImageTag(_string string, _string2 string) (io.ReadCloser, error) {
	return _dockerClient.CreateImageTag(_string, _string2)
}

func CreateImageTagV2(_string string, _string2 string) (docker_api.PushImageOfficialAPIResp, error) {
	return _dockerClient.CreateImageTagV2(_string, _string2)
}

func CreateImageTagV3(_string string, _string2 string) (docker_client.EventResp, error) {
	return _dockerClient.CreateImageTagV3(_string, _string2)
}

func Do(client func(*client.Client) error) error {
	return _dockerClient.Do(client)
}

func ExportImage(_string string) (docker_api.ExportImageResp, error) {
	return _dockerClient.ExportImage(_string)
}

func ExportImageV2(_string string) (docker_api.ExportImageRespV2, error) {
	return _dockerClient.ExportImageV2(_string)
}

func GC(varLenfunc ...util.Func) {
	_dockerClient.GC(varLenfunc...)
}

func GetAPIProvider() api_provider.APIProvider {
	return _dockerClient.GetAPIProvider()
}

func HostImageStorageGC(varLenhostImageGCFunc ...docker_api.HostImageGCFunc) {
	_dockerClient.HostImageStorageGC(varLenhostImageGCFunc...)
}

func ImagePrune(clearImage docker_api.ClearImage) (image.PruneReport, error) {
	return _dockerClient.ImagePrune(clearImage)
}

func ImportImage(_string string, reader io.Reader) (docker_api.ImportImageResp, error) {
	return _dockerClient.ImportImage(_string, reader)
}

func ImportImageV2(_string string, reader io.Reader) (docker_api.ImportImageResp, error) {
	return _dockerClient.ImportImageV2(_string, reader)
}

func ImportImageV3(_string string, reader io.Reader) (docker_api.ImportImageRespV3, error) {
	return _dockerClient.ImportImageV3(_string, reader)
}

func InspectImage(_string string) (types.ImageInspect, error) {
	return _dockerClient.InspectImage(_string)
}

func ListContainerIds() ([]string, error) {
	return _dockerClient.ListContainerIds()
}

func ListContainerNames() ([]string, error) {
	return _dockerClient.ListContainerNames()
}

func ListContainers() ([]types.Container, error) {
	return _dockerClient.ListContainers()
}

func RegistryAuth(authConfig *registry.AuthConfig) (string, error) {
	return _dockerClient.RegistryAuth(authConfig)
}

func SystemDF(varLendiskUsageObject ...types.DiskUsageObject) (types.DiskUsage, error) {
	return _dockerClient.SystemDF(varLendiskUsageObject...)
}

func SystemEvent(showEvent docker_api.ShowEvent) (<-chan events.Message, <-chan error) {
	return _dockerClient.SystemEvent(showEvent)
}

func SystemInfo() (system.Info, error) {
	return _dockerClient.SystemInfo()
}

func SystemPing() (types.Ping, error) {
	return _dockerClient.SystemPing()
}

func SystemVersion() (types.Version, error) {
	return _dockerClient.SystemVersion()
}

func WithContext(context context.Context) *docker_api.Client {
	return _dockerClient.WithContext(context)
}

func WithPage(page *util.Page) *docker_api.Client {
	return _dockerClient.WithPage(page)
}

func WithProject(_string string) *docker_api.Client {
	return _dockerClient.WithProject(_string)
}

func WithRegistryAuth(authConfig *registry.AuthConfig) *docker_api.Client {
	return _dockerClient.WithRegistryAuth(authConfig)
}
